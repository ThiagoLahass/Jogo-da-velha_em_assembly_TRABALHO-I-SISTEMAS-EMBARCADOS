     1                                  ; versão de 10/05/2007
     2                                  ; corrigido erro de arredondamento na rotina line.
     3                                  ; circle e full_circle disponibilizados por Jefferson Moro em 10/2009
     4                                  ;
     5                                  segment code
     6                                  ..start:
     7 00000000 B8[0000]                	mov 	ax,data
     8 00000003 8ED8                    	mov 	ds,ax
     9 00000005 B8[0000]                	mov 	ax,stack
    10 00000008 8ED0                    	mov 	ss,ax
    11 0000000A BC[0002]                	mov 	sp,stacktop
    12                                  
    13                                  ; salvar modo corrente de video(vendo como está o modo de video da maquina)
    14 0000000D B40F                    	mov  	ah,0Fh
    15 0000000F CD10                    	int  	10h
    16 00000011 A2[0100]                	mov  	[modo_anterior],al   
    17                                  
    18                                  ; alterar modo de video para gráfico 640x480 16 cores
    19 00000014 B012                    	mov     al,12h
    20 00000016 B400                    	mov     ah,0
    21 00000018 CD10                    	int     10h
    22                                  	
    23                                  
    24                                  ;desenhar retas da tabela de jogo
    25 0000001A C606[0000]0F            	mov		byte[cor],branco_intenso	
    26                                  	
    27                                  	;[125,190]->[515,190] -> HORIZONTAL
    28 0000001F B87D00                  	mov		ax,125
    29 00000022 50                      	push	ax
    30 00000023 B8BE00                  	mov		ax,190
    31 00000026 50                      	push	ax
    32 00000027 B80302                  	mov		ax,515
    33 0000002A 50                      	push	ax
    34 0000002B B8BE00                  	mov		ax,190
    35 0000002E 50                      	push	ax
    36 0000002F E85502                  	call	line
    37                                  
    38                                  	;[125,320]->[515,320] -> HORIZONTAL
    39 00000032 B87D00                  	mov		ax,125
    40 00000035 50                      	push	ax
    41 00000036 B84001                  	mov		ax,320
    42 00000039 50                      	push	ax
    43 0000003A B80302                  	mov		ax,515
    44 0000003D 50                      	push	ax
    45 0000003E B84001                  	mov		ax,320
    46 00000041 50                      	push	ax
    47 00000042 E84202                  	call	line
    48                                  
    49                                  	;[255,60]->[255,450] -> VERTICAL
    50 00000045 B8FF00                  	mov		ax,255
    51 00000048 50                      	push	ax
    52 00000049 B83C00                  	mov		ax,60
    53 0000004C 50                      	push	ax
    54 0000004D B8FF00                  	mov		ax,255
    55 00000050 50                      	push	ax
    56 00000051 B8C201                  	mov		ax,450
    57 00000054 50                      	push	ax
    58 00000055 E82F02                  	call	line
    59                                  
    60                                  	;[385,60]->[385,450] -> VERTICAL
    61 00000058 B88101                  	mov		ax,385
    62 0000005B 50                      	push	ax
    63 0000005C B83C00                  	mov		ax,60
    64 0000005F 50                      	push	ax
    65 00000060 B88101                  	mov		ax,385
    66 00000063 50                      	push	ax
    67 00000064 B8C201                  	mov		ax,450
    68 00000067 50                      	push	ax
    69 00000068 E81C02                  	call	line
    70                                  
    71                                  ;escrever mensagem topo "JOGO DA VELHA"
    72 0000006B B90D00                  	mov     cx,13					;número de caracteres
    73 0000006E BB0000                  	mov     bx,0
    74 00000071 B600                    	mov     dh,0					;linha 0-29
    75 00000073 B222                    	mov     dl,34					;coluna 0-79
    76 00000075 C606[0000]01            	mov		byte[cor],azul
    77                                  lm1:
    78 0000007A E8D000                  	call	cursor
    79 0000007D 8A87[0A00]              	mov     al,[bx+titulo]
    80 00000081 E8E000                  	call	caracter
    81 00000084 43                      	inc     bx						;proximo caracter
    82 00000085 FEC2                    	inc		dl						;avanca a coluna
    83 00000087 FE06[0000]              	inc		byte [cor]				;mudar a cor para a seguinte
    84 0000008B E2ED                    	loop    lm1
    85                                  
    86                                  ;escrever mensagem de comando
    87 0000008D B91000                  	mov     cx,16					;número de caracteres
    88 00000090 BB0000                  	mov     bx,0
    89 00000093 B61B                    	mov     dh,27					;linha 0-29
    90 00000095 B202                    	mov     dl,2					;coluna 0-79
    91 00000097 C606[0000]07            	mov		byte[cor],branco
    92                                  lm2:
    93 0000009C E8AE00                  	call	cursor
    94 0000009F 8A87[1700]              	mov     al,[bx+comando]
    95 000000A3 E8BE00                  	call	caracter
    96 000000A6 43                      	inc     bx						;proximo caracter
    97 000000A7 FEC2                    	inc		dl						;avanca a coluna
    98 000000A9 E2F1                    	loop    lm2
    99                                  
   100                                  ;escrever mensagem de mensagens
   101 000000AB B91100                  	mov     cx,17					;número de caracteres
   102 000000AE BB0000                  	mov     bx,0
   103 000000B1 B61D                    	mov     dh,29					;linha 0-29
   104 000000B3 B202                    	mov     dl,2					;coluna 0-79
   105 000000B5 C606[0000]07            	mov		byte[cor],branco
   106                                  lm3:
   107 000000BA E89000                  	call	cursor
   108 000000BD 8A87[2700]              	mov     al,[bx+mensagem]
   109 000000C1 E8A000                  	call	caracter
   110 000000C4 43                      	inc     bx						;proximo caracter
   111 000000C5 FEC2                    	inc		dl						;avanca a coluna
   112 000000C7 E2F1                    	loop    lm3
   113                                  
   114                                  
   115                                  ;desenhar um circulo na posicão [320,255] e raio 55px (só para testes por enquanto)
   116 000000C9 C606[0000]04            	mov		byte[cor], vermelho
   117 000000CE B84001                  	mov		ax, 320
   118 000000D1 50                      	push	ax
   119 000000D2 B8FF00                  	mov		ax, 255
   120 000000D5 50                      	push	ax
   121 000000D6 B82D00                  	mov		ax, raio
   122 000000D9 50                      	push	ax
   123 000000DA E8CC00                  	call 	circle
   124                                  
   125                                  ;desenhar um x na posicão [190,125] (centro), com lado 2*55 = 110px
   126 000000DD C606[0000]01            	mov		byte[cor], azul
   127 000000E2 B8BE00                  	mov		ax,190
   128 000000E5 50                      	push	ax
   129 000000E6 B87D00                  	mov		ax,125
   130 000000E9 50                      	push	ax
   131 000000EA B82D00                  	mov		ax, lado
   132 000000ED 50                      	push	ax
   133 000000EE E81000                  	call	desenha_x
   134                                  
   135                                  
   136                                  ; TERMINAR EXECUÇÃO DO PROGRAMA
   137                                  ; reseta o modo de video
   138 000000F1 B408                    	mov    	ah,08h
   139 000000F3 CD21                    	int     21h
   140 000000F5 B400                    	mov  	ah,0   					; set video mode
   141 000000F7 A0[0100]                	mov  	al,[modo_anterior]   	; modo anterior
   142 000000FA CD10                    	int  	10h
   143 000000FC B8004C                  	mov     ax,4c00h
   144 000000FF CD21                    	int     21h
   145                                  
   146                                  ;===========================================================================
   147                                  ;========================== FIM DO PROGRAMA ================================
   148                                  ;===========================================================================
   149                                  
   150                                  ;***************************************************************************
   151                                  ;
   152                                  ;   função desenha_x
   153                                  ;	lado estático de 'lado'px == 55 px
   154                                  ;
   155                                  ; push xc; push yc; call desenha_x;  (xc+l<639,yc+l<479)e(xc-l>0,yc-l>0)
   156                                  ; cor definida na variavel cor
   157                                  desenha_x:
   158 00000101 55                      	push 	bp
   159 00000102 89E5                    	mov	 	bp,sp
   160 00000104 9C                      	pushf               	;coloca os flags na pilha
   161 00000105 50                      	push 	ax
   162 00000106 53                      	push 	bx
   163 00000107 51                      	push	cx
   164 00000108 52                      	push	dx
   165 00000109 56                      	push	si
   166 0000010A 57                      	push	di
   167                                  	
   168 0000010B 8B4608                  	mov		ax,[bp+8]   	; resgata xc
   169 0000010E 8B5E06                  	mov		bx,[bp+6]    	; resgata yc
   170 00000111 8B4E04                  	mov		cx,[bp+4]		; resgata l
   171                                  	
   172                                  	;desenha primeira diagonal
   173 00000114 89C2                    	mov 	dx,ax			
   174 00000116 29CA                    	sub		dx,cx	; Ponto inferior esquerdo
   175 00000118 52                      	push	dx
   176 00000119 89DA                    	mov 	dx,bx
   177 0000011B 29CA                    	sub		dx,cx
   178 0000011D 52                      	push    dx
   179                                  
   180 0000011E 89C2                    	mov 	dx,ax
   181 00000120 01CA                    	add		dx,cx	; Ponto superior direito
   182 00000122 52                      	push	dx
   183 00000123 89DA                    	mov 	dx,bx
   184 00000125 01CA                    	add		dx,cx
   185 00000127 52                      	push    dx
   186                                  
   187 00000128 E85C01                  	call line
   188                                  
   189                                  	;desenha segunda diagonal
   190 0000012B 89C2                    	mov 	dx,ax			
   191 0000012D 01CA                    	add		dx,cx	; Ponto inferior direito
   192 0000012F 52                      	push	dx
   193 00000130 89DA                    	mov 	dx,bx
   194 00000132 29CA                    	sub		dx,cx
   195 00000134 52                      	push    dx
   196                                  
   197 00000135 89C2                    	mov 	dx,ax
   198 00000137 29CA                    	sub		dx,cx	; Ponto superior esquerdo
   199 00000139 52                      	push	dx
   200 0000013A 89DA                    	mov 	dx,bx
   201 0000013C 01CA                    	add		dx,cx
   202 0000013E 52                      	push    dx
   203                                  
   204 0000013F E84501                  	call line
   205                                  
   206 00000142 5F                      	pop		di
   207 00000143 5E                      	pop		si
   208 00000144 5A                      	pop		dx
   209 00000145 59                      	pop		cx
   210 00000146 5B                      	pop		bx
   211 00000147 58                      	pop		ax
   212 00000148 9D                      	popf
   213 00000149 5D                      	pop		bp
   214 0000014A C20600                  	ret		6
   215                                  
   216                                  
   217                                  ;***************************************************************************
   218                                  ;
   219                                  ;   função cursor
   220                                  ;
   221                                  ; dh = linha (0-29) e  dl=coluna  (0-79)
   222                                  cursor:
   223 0000014D 9C                      	pushf
   224 0000014E 50                      	push 	ax
   225 0000014F 53                      	push 	bx
   226 00000150 51                      	push	cx
   227 00000151 52                      	push	dx
   228 00000152 56                      	push	si
   229 00000153 57                      	push	di
   230 00000154 55                      	push	bp
   231 00000155 B402                    	mov     ah,2
   232 00000157 B700                    	mov     bh,0
   233 00000159 CD10                    	int     10h
   234 0000015B 5D                      	pop		bp
   235 0000015C 5F                      	pop		di
   236 0000015D 5E                      	pop		si
   237 0000015E 5A                      	pop		dx
   238 0000015F 59                      	pop		cx
   239 00000160 5B                      	pop		bx
   240 00000161 58                      	pop		ax
   241 00000162 9D                      	popf
   242 00000163 C3                      	ret
   243                                  
   244                                  
   245                                  ;_____________________________________________________________________________
   246                                  ;
   247                                  ; função caracter escrito na posisão do cursor
   248                                  ;
   249                                  ; al= caracter a ser escrito
   250                                  ; cor definida na variavel cor
   251                                  caracter:
   252 00000164 9C                      	pushf
   253 00000165 50                      	push 	ax
   254 00000166 53                      	push 	bx
   255 00000167 51                      	push	cx
   256 00000168 52                      	push	dx
   257 00000169 56                      	push	si
   258 0000016A 57                      	push	di
   259 0000016B 55                      	push	bp
   260 0000016C B409                    	mov     ah,9
   261 0000016E B700                    	mov     bh,0
   262 00000170 B90100                  	mov     cx,1
   263 00000173 8A1E[0000]              	mov     bl,[cor]
   264 00000177 CD10                    	int     10h
   265 00000179 5D                      	pop		bp
   266 0000017A 5F                      	pop		di
   267 0000017B 5E                      	pop		si
   268 0000017C 5A                      	pop		dx
   269 0000017D 59                      	pop		cx
   270 0000017E 5B                      	pop		bx
   271 0000017F 58                      	pop		ax
   272 00000180 9D                      	popf
   273 00000181 C3                      	ret
   274                                  
   275                                  
   276                                  ;_____________________________________________________________________________
   277                                  ;
   278                                  ;   função plot_xy
   279                                  ;
   280                                  ; push x; push y; call plot_xy;  (x<639, y<479)
   281                                  ; cor definida na variavel cor
   282                                  plot_xy:
   283 00000182 55                      	push	bp
   284 00000183 89E5                    	mov		bp,sp
   285 00000185 9C                      	pushf
   286 00000186 50                      	push 	ax
   287 00000187 53                      	push 	bx
   288 00000188 51                      	push	cx
   289 00000189 52                      	push	dx
   290 0000018A 56                      	push	si
   291 0000018B 57                      	push	di
   292 0000018C B40C                    	mov    	ah,0ch
   293 0000018E A0[0000]                	mov     al,[cor]
   294 00000191 B700                    	mov     bh,0
   295 00000193 BADF01                  	mov     dx,479
   296 00000196 2B5604                  	sub		dx,[bp+4]
   297 00000199 8B4E06                  	mov     cx,[bp+6]
   298 0000019C CD10                    	int     10h
   299 0000019E 5F                      	pop		di
   300 0000019F 5E                      	pop		si
   301 000001A0 5A                      	pop		dx
   302 000001A1 59                      	pop		cx
   303 000001A2 5B                      	pop		bx
   304 000001A3 58                      	pop		ax
   305 000001A4 9D                      	popf
   306 000001A5 5D                      	pop		bp
   307 000001A6 C20400                  	ret		4
   308                                  
   309                                  
   310                                  ;_____________________________________________________________________________
   311                                  ;    função circle
   312                                  ;	 push xc; push yc; push r; call circle;  (xc+r<639,yc+r<479)e(xc-r>0,yc-r>0)
   313                                  ; cor definida na variavel cor
   314                                  circle:
   315 000001A9 55                      	push 	bp
   316 000001AA 89E5                    	mov	 	bp,sp
   317 000001AC 9C                      	pushf               	;coloca os flags na pilha
   318 000001AD 50                      	push 	ax
   319 000001AE 53                      	push 	bx
   320 000001AF 51                      	push	cx
   321 000001B0 52                      	push	dx
   322 000001B1 56                      	push	si
   323 000001B2 57                      	push	di
   324                                  	
   325 000001B3 8B4608                  	mov		ax,[bp+8]   	; resgata xc
   326 000001B6 8B5E06                  	mov		bx,[bp+6]    	; resgata yc
   327 000001B9 8B4E04                  	mov		cx,[bp+4]    	; resgata r
   328                                  	
   329 000001BC 89DA                    	mov 	dx,bx	
   330 000001BE 01CA                    	add		dx,cx      		;ponto extremo superior
   331 000001C0 50                      	push    ax			
   332 000001C1 52                      	push	dx
   333 000001C2 E8BDFF                  	call 	plot_xy
   334                                  	
   335 000001C5 89DA                    	mov		dx,bx
   336 000001C7 29CA                    	sub		dx,cx       	;ponto extremo inferior
   337 000001C9 50                      	push    ax			
   338 000001CA 52                      	push	dx
   339 000001CB E8B4FF                  	call 	plot_xy
   340                                  	
   341 000001CE 89C2                    	mov 	dx,ax	
   342 000001D0 01CA                    	add		dx,cx       	;ponto extremo direita
   343 000001D2 52                      	push    dx			
   344 000001D3 53                      	push	bx
   345 000001D4 E8ABFF                  	call 	plot_xy
   346                                  	
   347 000001D7 89C2                    	mov		dx,ax
   348 000001D9 29CA                    	sub		dx,cx       	;ponto extremo esquerda
   349 000001DB 52                      	push    dx			
   350 000001DC 53                      	push	bx
   351 000001DD E8A2FF                  	call 	plot_xy
   352                                  		
   353 000001E0 89CF                    	mov		di,cx
   354 000001E2 81EF0100                	sub		di,1	 		;di=r-1
   355 000001E6 BA0000                  	mov		dx,0  			;dx será a variável x. cx é a variavel y
   356                                  	
   357                                  ;aqui em cima a lógica foi invertida, 1-r => r-1
   358                                  ;e as comparações passaram a ser jl => jg, assim garante 
   359                                  ;valores positivos para d
   360                                  
   361                                  stay:						;loop
   362 000001E9 89FE                    	mov		si,di
   363 000001EB 81FE0000                	cmp		si,0
   364 000001EF 7F0E                    	jg		inf      		;caso d for menor que 0, seleciona pixel superior (não  salta)
   365 000001F1 89D6                    	mov		si,dx			;o jl é importante porque trata-se de conta com sinal
   366 000001F3 D1E6                    	sal		si,1			;multiplica por doi (shift arithmetic left)
   367 000001F5 81C60300                	add		si,3
   368 000001F9 01F7                    	add		di,si    		;nesse ponto d=d+2*dx+3
   369 000001FB 42                      	inc		dx				;incrementa dx
   370 000001FC E90E00                  	jmp		plotar
   371                                  inf:	
   372 000001FF 89D6                    	mov		si,dx
   373 00000201 29CE                    	sub		si,cx  			;faz x - y (dx-cx), e salva em di 
   374 00000203 D1E6                    	sal		si,1
   375 00000205 81C60500                	add		si,5
   376 00000209 01F7                    	add		di,si			;nesse ponto d=d+2*(dx-cx)+5
   377 0000020B 42                      	inc		dx				;incrementa x (dx)
   378 0000020C 49                      	dec		cx				;decrementa y (cx)
   379                                  	
   380                                  plotar:	
   381 0000020D 89D6                    	mov		si,dx
   382 0000020F 01C6                    	add		si,ax
   383 00000211 56                      	push    si				;coloca a abcisa x+xc na pilha
   384 00000212 89CE                    	mov		si,cx
   385 00000214 01DE                    	add		si,bx
   386 00000216 56                      	push    si				;coloca a ordenada y+yc na pilha
   387 00000217 E868FF                  	call 	plot_xy			;toma conta do segundo octante
   388 0000021A 89C6                    	mov		si,ax
   389 0000021C 01D6                    	add		si,dx
   390 0000021E 56                      	push    si				;coloca a abcisa xc+x na pilha
   391 0000021F 89DE                    	mov		si,bx
   392 00000221 29CE                    	sub		si,cx
   393 00000223 56                      	push    si				;coloca a ordenada yc-y na pilha
   394 00000224 E85BFF                  	call 	plot_xy			;toma conta do sétimo octante
   395 00000227 89C6                    	mov		si,ax
   396 00000229 01CE                    	add		si,cx
   397 0000022B 56                      	push    si				;coloca a abcisa xc+y na pilha
   398 0000022C 89DE                    	mov		si,bx
   399 0000022E 01D6                    	add		si,dx
   400 00000230 56                      	push    si				;coloca a ordenada yc+x na pilha
   401 00000231 E84EFF                  	call 	plot_xy			;toma conta do segundo octante
   402 00000234 89C6                    	mov		si,ax
   403 00000236 01CE                    	add		si,cx
   404 00000238 56                      	push    si				;coloca a abcisa xc+y na pilha
   405 00000239 89DE                    	mov		si,bx
   406 0000023B 29D6                    	sub		si,dx
   407 0000023D 56                      	push    si				;coloca a ordenada yc-x na pilha
   408 0000023E E841FF                  	call 	plot_xy			;toma conta do oitavo octante
   409 00000241 89C6                    	mov		si,ax
   410 00000243 29D6                    	sub		si,dx
   411 00000245 56                      	push    si				;coloca a abcisa xc-x na pilha
   412 00000246 89DE                    	mov		si,bx
   413 00000248 01CE                    	add		si,cx
   414 0000024A 56                      	push    si				;coloca a ordenada yc+y na pilha
   415 0000024B E834FF                  	call 	plot_xy			;toma conta do terceiro octante
   416 0000024E 89C6                    	mov		si,ax
   417 00000250 29D6                    	sub		si,dx
   418 00000252 56                      	push    si				;coloca a abcisa xc-x na pilha
   419 00000253 89DE                    	mov		si,bx
   420 00000255 29CE                    	sub		si,cx
   421 00000257 56                      	push    si				;coloca a ordenada yc-y na pilha
   422 00000258 E827FF                  	call 	plot_xy			;toma conta do sexto octante
   423 0000025B 89C6                    	mov		si,ax
   424 0000025D 29CE                    	sub		si,cx
   425 0000025F 56                      	push    si				;coloca a abcisa xc-y na pilha
   426 00000260 89DE                    	mov		si,bx
   427 00000262 29D6                    	sub		si,dx
   428 00000264 56                      	push    si				;coloca a ordenada yc-x na pilha
   429 00000265 E81AFF                  	call 	plot_xy			;toma conta do quinto octante
   430 00000268 89C6                    	mov		si,ax
   431 0000026A 29CE                    	sub		si,cx
   432 0000026C 56                      	push    si				;coloca a abcisa xc-y na pilha
   433 0000026D 89DE                    	mov		si,bx
   434 0000026F 01D6                    	add		si,dx
   435 00000271 56                      	push    si				;coloca a ordenada yc-x na pilha
   436 00000272 E80DFF                  	call 	plot_xy			;toma conta do quarto octante
   437                                  	
   438 00000275 39D1                    	cmp		cx,dx
   439 00000277 7203                    	jb		fim_circle 		;se cx (y) está abaixo de dx (x), termina     
   440 00000279 E96DFF                  	jmp		stay			;se cx (y) está acima de dx (x), continua no loop
   441                                  	
   442                                  	
   443                                  fim_circle:
   444 0000027C 5F                      	pop		di
   445 0000027D 5E                      	pop		si
   446 0000027E 5A                      	pop		dx
   447 0000027F 59                      	pop		cx
   448 00000280 5B                      	pop		bx
   449 00000281 58                      	pop		ax
   450 00000282 9D                      	popf
   451 00000283 5D                      	pop		bp
   452 00000284 C20600                  	ret		6
   453                                  
   454                                  
   455                                  ;-----------------------------------------------------------------------------
   456                                  ;
   457                                  ;   função line
   458                                  ;
   459                                  ; push x1; push y1; push x2; push y2; call line;  (x<639, y<479)
   460                                  line:
   461 00000287 55                      	push	bp
   462 00000288 89E5                    	mov		bp,sp
   463 0000028A 9C                      	pushf              		;coloca os flags na pilha
   464 0000028B 50                      	push 	ax
   465 0000028C 53                      	push 	bx
   466 0000028D 51                      	push	cx
   467 0000028E 52                      	push	dx
   468 0000028F 56                      	push	si
   469 00000290 57                      	push	di
   470 00000291 8B460A                  	mov		ax,[bp+10]   	; resgata os valores das coordenadas
   471 00000294 8B5E08                  	mov		bx,[bp+8]    	; resgata os valores das coordenadas
   472 00000297 8B4E06                  	mov		cx,[bp+6]    	; resgata os valores das coordenadas
   473 0000029A 8B5604                  	mov		dx,[bp+4]    	; resgata os valores das coordenadas
   474 0000029D 39C8                    	cmp		ax,cx
   475 0000029F 7408                    	je		line2
   476 000002A1 721C                    	jb		line1
   477 000002A3 91                      	xchg	ax,cx
   478 000002A4 87DA                    	xchg	bx,dx
   479 000002A6 E91600                  	jmp		line1
   480                                  line2:						; deltax=0
   481 000002A9 39D3                    	cmp		bx,dx  			;subtrai dx de bx
   482 000002AB 7202                    	jb		line3
   483 000002AD 87DA                    	xchg	bx,dx     		;troca os valores de bx e dx entre eles
   484                                  line3:						; dx > bx
   485 000002AF 50                      	push	ax
   486 000002B0 53                      	push	bx
   487 000002B1 E8CEFE                  	call 	plot_xy
   488 000002B4 39D3                    	cmp		bx,dx
   489 000002B6 7503                    	jne		line31
   490 000002B8 E9C600                  	jmp		fim_line
   491                                  line31:
   492 000002BB 43                      	inc		bx
   493 000002BC E9F0FF                  	jmp		line3
   494                                  ;deltax <>0
   495                                  line1:
   496                                  ; comparar módulos de deltax e deltay sabendo que cx>ax
   497                                  ; cx > ax
   498 000002BF 51                      	push	cx
   499 000002C0 29C1                    	sub		cx,ax
   500 000002C2 890E[0600]              	mov		[deltax],cx
   501 000002C6 59                      	pop		cx
   502 000002C7 52                      	push	dx
   503 000002C8 29DA                    	sub		dx,bx
   504 000002CA 7702                    	ja		line32
   505 000002CC F7DA                    	neg		dx
   506                                  line32:		
   507 000002CE 8916[0800]              	mov		[deltay],dx
   508 000002D2 5A                      	pop		dx
   509                                  
   510 000002D3 50                      	push	ax
   511 000002D4 A1[0600]                	mov		ax,[deltax]
   512 000002D7 3B06[0800]              	cmp		ax,[deltay]
   513 000002DB 58                      	pop		ax
   514 000002DC 724D                    	jb		line5
   515                                  
   516                                  ; cx > ax e deltax>deltay
   517 000002DE 51                      	push	cx
   518 000002DF 29C1                    	sub		cx,ax
   519 000002E1 890E[0600]              	mov		[deltax],cx
   520 000002E5 59                      	pop		cx
   521 000002E6 52                      	push	dx
   522 000002E7 29DA                    	sub		dx,bx
   523 000002E9 8916[0800]              	mov		[deltay],dx
   524 000002ED 5A                      	pop		dx
   525                                  
   526 000002EE 89C6                    	mov		si,ax
   527                                  line4:
   528 000002F0 50                      	push	ax
   529 000002F1 52                      	push	dx
   530 000002F2 56                      	push	si
   531 000002F3 29C6                    	sub		si,ax			;(x-x1)
   532 000002F5 A1[0800]                	mov		ax,[deltay]
   533 000002F8 F7EE                    	imul	si
   534 000002FA 8B36[0600]              	mov		si,[deltax]		;arredondar
   535 000002FE D1EE                    	shr		si,1
   536                                  ; se numerador (DX)>0 soma se <0 subtrai
   537 00000300 81FA0000                	cmp		dx,0
   538 00000304 7C09                    	jl		ar1
   539 00000306 01F0                    	add		ax,si
   540 00000308 81D20000                	adc		dx,0
   541 0000030C E90600                  	jmp		arc1
   542                                  ar1:
   543 0000030F 29F0                    	sub		ax,si
   544 00000311 81DA0000                	sbb		dx,0
   545                                  arc1:
   546 00000315 F73E[0600]              	idiv	word [deltax]
   547 00000319 01D8                    	add		ax,bx
   548 0000031B 5E                      	pop		si
   549 0000031C 56                      	push	si
   550 0000031D 50                      	push	ax
   551 0000031E E861FE                  	call	plot_xy
   552 00000321 5A                      	pop		dx
   553 00000322 58                      	pop		ax
   554 00000323 39CE                    	cmp		si,cx
   555 00000325 745A                    	je		fim_line
   556 00000327 46                      	inc		si
   557 00000328 E9C5FF                  	jmp		line4
   558                                  
   559                                  line5:	
   560 0000032B 39D3                    	cmp		bx,dx
   561 0000032D 7203                    	jb 		line7
   562 0000032F 91                      	xchg	ax,cx
   563 00000330 87DA                    	xchg	bx,dx
   564                                  line7:
   565 00000332 51                      	push	cx
   566 00000333 29C1                    	sub		cx,ax
   567 00000335 890E[0600]              	mov		[deltax],cx
   568 00000339 59                      	pop		cx
   569 0000033A 52                      	push	dx
   570 0000033B 29DA                    	sub		dx,bx
   571 0000033D 8916[0800]              	mov		[deltay],dx
   572 00000341 5A                      	pop		dx
   573 00000342 89DE                    	mov		si,bx
   574                                  line6:
   575 00000344 52                      	push	dx
   576 00000345 56                      	push	si
   577 00000346 50                      	push	ax
   578 00000347 29DE                    	sub		si,bx			;(y-y1)
   579 00000349 A1[0600]                	mov		ax,[deltax]
   580 0000034C F7EE                    	imul	si
   581 0000034E 8B36[0800]              	mov		si,[deltay]		;arredondar
   582 00000352 D1EE                    	shr		si,1
   583                                  ; se numerador (DX)>0 soma se <0 subtrai
   584 00000354 81FA0000                	cmp		dx,0
   585 00000358 7C09                    	jl		ar2
   586 0000035A 01F0                    	add		ax,si
   587 0000035C 81D20000                	adc		dx,0
   588 00000360 E90600                  	jmp		arc2
   589                                  ar2:
   590 00000363 29F0                    	sub		ax,si
   591 00000365 81DA0000                	sbb		dx,0
   592                                  arc2:
   593 00000369 F73E[0800]              	idiv	word [deltay]
   594 0000036D 89C7                    	mov		di,ax
   595 0000036F 58                      	pop		ax
   596 00000370 01C7                    	add		di,ax
   597 00000372 5E                      	pop		si
   598 00000373 57                      	push	di
   599 00000374 56                      	push	si
   600 00000375 E80AFE                  	call	plot_xy
   601 00000378 5A                      	pop		dx
   602 00000379 39D6                    	cmp		si,dx
   603 0000037B 7404                    	je		fim_line
   604 0000037D 46                      	inc		si
   605 0000037E E9C3FF                  	jmp		line6
   606                                  
   607                                  fim_line:
   608 00000381 5F                      	pop		di
   609 00000382 5E                      	pop		si
   610 00000383 5A                      	pop		dx
   611 00000384 59                      	pop		cx
   612 00000385 5B                      	pop		bx
   613 00000386 58                      	pop		ax
   614 00000387 9D                      	popf
   615 00000388 5D                      	pop		bp
   616 00000389 C20800                  	ret		8
   617                                  ;*******************************************************************
   618                                  
   619                                  
   620                                  segment data
   621                                  
   622 00000000 0F                      cor			db		branco_intenso
   623                                  
   624                                  ;	I R G B COR
   625                                  ;	0 0 0 0 preto
   626                                  ;	0 0 0 1 azul
   627                                  ;	0 0 1 0 verde
   628                                  ;	0 0 1 1 cyan
   629                                  ;	0 1 0 0 vermelho
   630                                  ;	0 1 0 1 magenta
   631                                  ;	0 1 1 0 marrom
   632                                  ;	0 1 1 1 branco
   633                                  ;	1 0 0 0 cinza
   634                                  ;	1 0 0 1 azul claro
   635                                  ;	1 0 1 0 verde claro
   636                                  ;	1 0 1 1 cyan claro
   637                                  ;	1 1 0 0 rosa
   638                                  ;	1 1 0 1 magenta claro
   639                                  ;	1 1 1 0 amarelo
   640                                  ;	1 1 1 1 branco intenso
   641                                  
   642                                  preto			equ		0
   643                                  azul			equ		1
   644                                  verde			equ		2
   645                                  cyan			equ		3
   646                                  vermelho		equ		4
   647                                  magenta			equ		5
   648                                  marrom			equ		6
   649                                  branco			equ		7
   650                                  cinza			equ		8
   651                                  azul_claro		equ		9
   652                                  verde_claro		equ		10
   653                                  cyan_claro		equ		11
   654                                  rosa			equ		12
   655                                  magenta_claro	equ		13
   656                                  amarelo			equ		14
   657                                  branco_intenso	equ		15
   658                                  
   659                                  raio			equ		45
   660                                  lado			equ		45
   661                                  
   662 00000001 00                      modo_anterior	db		0
   663 00000002 0000                    linha   		dw  	0
   664 00000004 0000                    coluna  		dw  	0
   665 00000006 0000                    deltax			dw		0
   666 00000008 0000                    deltay			dw		0	
   667 0000000A 4A4F474F2044412056-     titulo    		db  	'JOGO DA VELHA'
   668 00000013 454C4841           
   669 00000017 43616D706F20646520-     comando			db		'Campo de Comando'
   670 00000020 436F6D616E646F     
   671 00000027 43616D706F20646520-     mensagem		db		'Campo de Mensagem'
   672 00000030 4D656E736167656D   
   673                                  
   674                                  
   675                                  ;*************************************************************************
   676                                  segment stack stack
   677 00000000 <res 00000200>              			resb 	512
   678                                  stacktop:
